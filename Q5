#include<stdio.h>
int partition(int arr[],int low,int high){
    int pivot = arr[high];
    int i = low - 1;

    for(int j = low; j<high; j++){
        if(arr[j] <= pivot){
            i++;
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
        }
    }
    int temp = arr[i+1];
    arr[i+1] = arr[high];
    arr[high] = temp;
   
    return i+1;
}
int kthsmallest(int arr[], int low, int high, int k){
    if(k > 0 && k <= high-low+1){
        int pi = partition(arr,low,high);
        if(pi-low+1 == k){
            return arr[pi];
        }
        else if(pi-low+1  > k){
            return kthsmallest(arr,low,pi-1,k);
        } else {
            return kthsmallest(arr,pi+1,high,k-(pi-low+1));
        }
    return -1;
    }

}
int main(){
    int arr[] = {45,2,67,9,6,56};
    int n = sizeof(arr) / sizeof(arr[0]);
    int k = 2;
    int result = kthsmallest(arr,0,n-1,k);
    printf("%d ",result);
}
